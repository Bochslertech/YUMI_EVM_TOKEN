{
  "version": "3.4",
  "log": [
    {
      "@openzeppelin/contracts/access/Ownable.sol:Ownable": {
        "src": "@openzeppelin/contracts/access/Ownable.sol:20",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin/contracts/access/Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.17"
      },
      "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:35",
        "version": {
          "withMetadata": "cba000765fc5bf1cef298fbdddebbfa3a601a43919ede6a57bbff48cdf7dbfd0",
          "withoutMetadata": "f20ca092da57f2644ba08f79317439c7770edc70f39117d7f90efd6bf142214f",
          "linkedWithoutMetadata": "f20ca092da57f2644ba08f79317439c7770edc70f39117d7f90efd6bf142214f"
        },
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:54"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.17"
      },
      "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.17"
      },
      "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:13",
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.17"
      },
      "@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.17"
      },
      "@openzeppelin/contracts/utils/cryptography/MerkleProof.sol:MerkleProof": {
        "src": "@openzeppelin/contracts/utils/cryptography/MerkleProof.sol:20",
        "version": {
          "withMetadata": "ba031f11b3b3b22d799ff1578e526bb9ef3834bd8ab75341ba00f21529df28c7",
          "withoutMetadata": "50918aecfb797943d937d0779744d7d7415633fa0699c041a24f4a8412fe6a4f",
          "linkedWithoutMetadata": "50918aecfb797943d937d0779744d7d7415633fa0699c041a24f4a8412fe6a4f"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.17"
      },
      "@openzeppelin/contracts/utils/introspection/ERC165.sol:ERC165": {
        "src": "@openzeppelin/contracts/utils/introspection/ERC165.sol:22",
        "inherit": [
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.17"
      },
      "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165": {
        "src": "@openzeppelin/contracts/utils/introspection/IERC165.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.17"
      },
      "contracts/Lock.sol:Lock": {
        "src": "contracts/Lock.sol:7",
        "version": {
          "withMetadata": "f3e8e761bd6b818c0260cd929ff408421916c6a9e222bbc15b3e4472ac37fb4e",
          "withoutMetadata": "2f5964c16196670a1c19e433657fb808d9467256a62f21658b160864b4eddc97",
          "linkedWithoutMetadata": "2f5964c16196670a1c19e433657fb808d9467256a62f21658b160864b4eddc97"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(uint256)",
          "withdraw()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Lock",
            "src": "contracts/Lock.sol:13"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "unlockTime",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "Lock",
              "src": "contracts/Lock.sol:8"
            },
            {
              "label": "owner",
              "offset": 0,
              "slot": "1",
              "type": "t_address_payable",
              "contract": "Lock",
              "src": "contracts/Lock.sol:9"
            }
          ],
          "types": {
            "t_address_payable": {
              "label": "address payable",
              "numberOfBytes": "20"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.17"
      },
      "contracts/erc20/IERC20Token.sol:IERC20Token": {
        "src": "contracts/erc20/IERC20Token.sol:22",
        "inherit": [],
        "libraries": [],
        "methods": [
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "totalSupply()",
          "balanceOf(address)",
          "allowance(address,address)",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.17"
      },
      "contracts/erc20/IEtherToken.sol:IEtherToken": {
        "src": "contracts/erc20/IEtherToken.sol:24",
        "inherit": [
          "contracts/erc20/IERC20Token.sol:IERC20Token"
        ],
        "libraries": [],
        "methods": [
          "deposit()",
          "withdraw(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.17"
      },
      "contracts/nft/EIP2981AllToken.sol:EIP2981AllToken": {
        "src": "contracts/nft/EIP2981AllToken.sol:14",
        "version": {
          "withMetadata": "e637b5241589aff15920c5346c8ee5b911b2f60b5e9dc33100c08eac30d34315",
          "withoutMetadata": "2052e01595f39501a83f6c4b9e14f0e60c876681da6836754fd6701402d16cb9",
          "linkedWithoutMetadata": "2052e01595f39501a83f6c4b9e14f0e60c876681da6836754fd6701402d16cb9"
        },
        "inherit": [
          "@openzeppelin/contracts/utils/introspection/ERC165.sol:ERC165",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165",
          "contracts/nft/IEIP2981.sol:IEIP2981"
        ],
        "libraries": [],
        "methods": [
          "(address,uint256)",
          "royaltyInfo(uint256,uint256)",
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "EIP2981AllToken",
            "src": "contracts/nft/EIP2981AllToken.sol:26"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "royaltyAddr",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "EIP2981AllToken",
              "src": "contracts/nft/EIP2981AllToken.sol:16"
            },
            {
              "label": "royaltyPerc",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "EIP2981AllToken",
              "src": "contracts/nft/EIP2981AllToken.sol:17"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.17"
      },
      "contracts/nft/ERC721ACore.sol:ERC721ACore": {
        "src": "contracts/nft/ERC721ACore.sol:8",
        "version": {
          "withMetadata": "a3c6300ac09099134e559565ea12c7060000ea41e1d7fedaeda21f3ec5e9f95c",
          "withoutMetadata": "029045b9148f9cb0303888cc021a1ed1ff481b0790278ffa5df01e049b3cd0f8",
          "linkedWithoutMetadata": "029045b9148f9cb0303888cc021a1ed1ff481b0790278ffa5df01e049b3cd0f8"
        },
        "inherit": [
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context",
          "contracts/nft/EIP2981AllToken.sol:EIP2981AllToken",
          "@openzeppelin/contracts/utils/introspection/ERC165.sol:ERC165",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165",
          "contracts/nft/IEIP2981.sol:IEIP2981",
          "erc721a/contracts/ERC721A.sol:ERC721A",
          "erc721a/contracts/IERC721A.sol:IERC721A"
        ],
        "libraries": [
          "@openzeppelin/contracts/utils/cryptography/MerkleProof.sol:MerkleProof"
        ],
        "methods": [
          "(string,string,address,uint256,uint256,uint256,bytes32,address,address)",
          "setAllowlistSaleStatus(bool)",
          "setPublicSaleStatus(bool)",
          "freezeMetadata()",
          "setMintAllowance(uint256)",
          "setBaseURI(string)",
          "setRoyaltyInfo(address,uint256)",
          "airdrop(address[])",
          "ownerMint(uint128)",
          "withdrawEther()",
          "mint(uint256,bytes32[])",
          "setAdminAddress(address)",
          "setPayoutAddress(address)",
          "getNumMinted(address)",
          "getRemainingSupply()",
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC721ACore",
            "src": "contracts/nft/ERC721ACore.sol:49"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_currentIndex",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ERC721A",
              "src": "erc721a/contracts/ERC721A.sol:98"
            },
            {
              "label": "_burnCounter",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "ERC721A",
              "src": "erc721a/contracts/ERC721A.sol:101"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "2",
              "type": "t_string_storage",
              "contract": "ERC721A",
              "src": "erc721a/contracts/ERC721A.sol:104"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC721A",
              "src": "erc721a/contracts/ERC721A.sol:107"
            },
            {
              "label": "_packedOwnerships",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "ERC721A",
              "src": "erc721a/contracts/ERC721A.sol:119"
            },
            {
              "label": "_packedAddressData",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC721A",
              "src": "erc721a/contracts/ERC721A.sol:128"
            },
            {
              "label": "_tokenApprovals",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_uint256,t_struct(TokenApprovalRef)2493_storage)",
              "contract": "ERC721A",
              "src": "erc721a/contracts/ERC721A.sol:131"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC721A",
              "src": "erc721a/contracts/ERC721A.sol:134"
            },
            {
              "label": "royaltyAddr",
              "offset": 0,
              "slot": "8",
              "type": "t_address",
              "contract": "EIP2981AllToken",
              "src": "contracts/nft/EIP2981AllToken.sol:16"
            },
            {
              "label": "royaltyPerc",
              "offset": 0,
              "slot": "9",
              "type": "t_uint256",
              "contract": "EIP2981AllToken",
              "src": "contracts/nft/EIP2981AllToken.sol:17"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "10",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "allowlistSaleOpen",
              "offset": 20,
              "slot": "10",
              "type": "t_bool",
              "contract": "ERC721ACore",
              "src": "contracts/nft/ERC721ACore.sol:9"
            },
            {
              "label": "publicSaleOpen",
              "offset": 21,
              "slot": "10",
              "type": "t_bool",
              "contract": "ERC721ACore",
              "src": "contracts/nft/ERC721ACore.sol:10"
            },
            {
              "label": "frozen",
              "offset": 22,
              "slot": "10",
              "type": "t_bool",
              "contract": "ERC721ACore",
              "src": "contracts/nft/ERC721ACore.sol:11"
            },
            {
              "label": "mintAllowance",
              "offset": 0,
              "slot": "11",
              "type": "t_uint256",
              "contract": "ERC721ACore",
              "src": "contracts/nft/ERC721ACore.sol:12"
            },
            {
              "label": "mintPrice",
              "offset": 0,
              "slot": "12",
              "type": "t_uint256",
              "contract": "ERC721ACore",
              "src": "contracts/nft/ERC721ACore.sol:13"
            },
            {
              "label": "maxSupply",
              "offset": 0,
              "slot": "13",
              "type": "t_uint256",
              "contract": "ERC721ACore",
              "src": "contracts/nft/ERC721ACore.sol:14"
            },
            {
              "label": "payoutAddress",
              "offset": 0,
              "slot": "14",
              "type": "t_address_payable",
              "contract": "ERC721ACore",
              "src": "contracts/nft/ERC721ACore.sol:16"
            },
            {
              "label": "adminAddress",
              "offset": 0,
              "slot": "15",
              "type": "t_address",
              "contract": "ERC721ACore",
              "src": "contracts/nft/ERC721ACore.sol:17"
            },
            {
              "label": "allowlistMerkleRoot",
              "offset": 0,
              "slot": "16",
              "type": "t_bytes32",
              "contract": "ERC721ACore",
              "src": "contracts/nft/ERC721ACore.sol:19"
            },
            {
              "label": "baseTokenURI",
              "offset": 0,
              "slot": "17",
              "type": "t_string_storage",
              "contract": "ERC721ACore",
              "src": "contracts/nft/ERC721ACore.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_address_payable": {
              "label": "address payable",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(TokenApprovalRef)2493_storage)": {
              "label": "mapping(uint256 => struct ERC721A.TokenApprovalRef)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(TokenApprovalRef)2493_storage": {
              "label": "struct ERC721A.TokenApprovalRef",
              "members": [
                {
                  "label": "value",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.17"
      },
      "contracts/nft/IEIP2981.sol:IEIP2981": {
        "src": "contracts/nft/IEIP2981.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "royaltyInfo(uint256,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.17"
      },
      "contracts/nft/YumiNFT.sol:YumiNFT": {
        "src": "contracts/nft/YumiNFT.sol:10",
        "version": {
          "withMetadata": "ef41b83bc82c37711f9355c3203ff759850ee634fd2b943e6d51252e23cb2a6a",
          "withoutMetadata": "36c0745e3a1f4caca49823e66448c6cd8665a3f34ad857ebc84ba605af7ab2bd",
          "linkedWithoutMetadata": "36c0745e3a1f4caca49823e66448c6cd8665a3f34ad857ebc84ba605af7ab2bd"
        },
        "inherit": [
          "contracts/nft/ERC721ACore.sol:ERC721ACore",
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context",
          "contracts/nft/EIP2981AllToken.sol:EIP2981AllToken",
          "@openzeppelin/contracts/utils/introspection/ERC165.sol:ERC165",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165",
          "contracts/nft/IEIP2981.sol:IEIP2981",
          "erc721a/contracts/ERC721A.sol:ERC721A",
          "erc721a/contracts/IERC721A.sol:IERC721A"
        ],
        "libraries": [],
        "methods": [
          "(address,uint256,address,address,uint256,uint256,bytes32,bytes32)",
          "setMerkleRoot(bytes32)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "YumiNFT",
            "src": "contracts/nft/YumiNFT.sol:13"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_currentIndex",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ERC721A",
              "src": "erc721a/contracts/ERC721A.sol:98"
            },
            {
              "label": "_burnCounter",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "ERC721A",
              "src": "erc721a/contracts/ERC721A.sol:101"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "2",
              "type": "t_string_storage",
              "contract": "ERC721A",
              "src": "erc721a/contracts/ERC721A.sol:104"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC721A",
              "src": "erc721a/contracts/ERC721A.sol:107"
            },
            {
              "label": "_packedOwnerships",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "ERC721A",
              "src": "erc721a/contracts/ERC721A.sol:119"
            },
            {
              "label": "_packedAddressData",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC721A",
              "src": "erc721a/contracts/ERC721A.sol:128"
            },
            {
              "label": "_tokenApprovals",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_uint256,t_struct(TokenApprovalRef)2493_storage)",
              "contract": "ERC721A",
              "src": "erc721a/contracts/ERC721A.sol:131"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC721A",
              "src": "erc721a/contracts/ERC721A.sol:134"
            },
            {
              "label": "royaltyAddr",
              "offset": 0,
              "slot": "8",
              "type": "t_address",
              "contract": "EIP2981AllToken",
              "src": "contracts/nft/EIP2981AllToken.sol:16"
            },
            {
              "label": "royaltyPerc",
              "offset": 0,
              "slot": "9",
              "type": "t_uint256",
              "contract": "EIP2981AllToken",
              "src": "contracts/nft/EIP2981AllToken.sol:17"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "10",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "allowlistSaleOpen",
              "offset": 20,
              "slot": "10",
              "type": "t_bool",
              "contract": "ERC721ACore",
              "src": "contracts/nft/ERC721ACore.sol:9"
            },
            {
              "label": "publicSaleOpen",
              "offset": 21,
              "slot": "10",
              "type": "t_bool",
              "contract": "ERC721ACore",
              "src": "contracts/nft/ERC721ACore.sol:10"
            },
            {
              "label": "frozen",
              "offset": 22,
              "slot": "10",
              "type": "t_bool",
              "contract": "ERC721ACore",
              "src": "contracts/nft/ERC721ACore.sol:11"
            },
            {
              "label": "mintAllowance",
              "offset": 0,
              "slot": "11",
              "type": "t_uint256",
              "contract": "ERC721ACore",
              "src": "contracts/nft/ERC721ACore.sol:12"
            },
            {
              "label": "mintPrice",
              "offset": 0,
              "slot": "12",
              "type": "t_uint256",
              "contract": "ERC721ACore",
              "src": "contracts/nft/ERC721ACore.sol:13"
            },
            {
              "label": "maxSupply",
              "offset": 0,
              "slot": "13",
              "type": "t_uint256",
              "contract": "ERC721ACore",
              "src": "contracts/nft/ERC721ACore.sol:14"
            },
            {
              "label": "payoutAddress",
              "offset": 0,
              "slot": "14",
              "type": "t_address_payable",
              "contract": "ERC721ACore",
              "src": "contracts/nft/ERC721ACore.sol:16"
            },
            {
              "label": "adminAddress",
              "offset": 0,
              "slot": "15",
              "type": "t_address",
              "contract": "ERC721ACore",
              "src": "contracts/nft/ERC721ACore.sol:17"
            },
            {
              "label": "allowlistMerkleRoot",
              "offset": 0,
              "slot": "16",
              "type": "t_bytes32",
              "contract": "ERC721ACore",
              "src": "contracts/nft/ERC721ACore.sol:19"
            },
            {
              "label": "baseTokenURI",
              "offset": 0,
              "slot": "17",
              "type": "t_string_storage",
              "contract": "ERC721ACore",
              "src": "contracts/nft/ERC721ACore.sol:21"
            },
            {
              "label": "provenanceHash",
              "offset": 0,
              "slot": "18",
              "type": "t_bytes32",
              "contract": "YumiNFT",
              "src": "contracts/nft/YumiNFT.sol:11"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_address_payable": {
              "label": "address payable",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(TokenApprovalRef)2493_storage)": {
              "label": "mapping(uint256 => struct ERC721A.TokenApprovalRef)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(TokenApprovalRef)2493_storage": {
              "label": "struct ERC721A.TokenApprovalRef",
              "members": [
                {
                  "label": "value",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.17"
      },
      "contracts/token/WETH.sol:WETH": {
        "src": "contracts/token/WETH.sol:3",
        "version": {
          "withMetadata": "645449349e9ec84142e6e85f508e1041a8e6759b4704af1dca3d6a6894d6f8ec",
          "withoutMetadata": "60cf222ee15f549be354a934931417fd355408892ddb7bd2347f8cd684836cab",
          "linkedWithoutMetadata": "60cf222ee15f549be354a934931417fd355408892ddb7bd2347f8cd684836cab"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "()",
          "deposit()",
          "withdraw(uint256)",
          "totalSupply()",
          "approve(address,uint256)",
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "state-variable-assignment",
            "name": "name",
            "src": "contracts/token/WETH.sol:4"
          },
          {
            "kind": "state-variable-assignment",
            "name": "symbol",
            "src": "contracts/token/WETH.sol:5"
          },
          {
            "kind": "state-variable-assignment",
            "name": "decimals",
            "src": "contracts/token/WETH.sol:6"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "WETH",
              "src": "contracts/token/WETH.sol:4"
            },
            {
              "label": "symbol",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "WETH",
              "src": "contracts/token/WETH.sol:5"
            },
            {
              "label": "decimals",
              "offset": 0,
              "slot": "2",
              "type": "t_uint8",
              "contract": "WETH",
              "src": "contracts/token/WETH.sol:6"
            },
            {
              "label": "balanceOf",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "WETH",
              "src": "contracts/token/WETH.sol:13"
            },
            {
              "label": "allowance",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "WETH",
              "src": "contracts/token/WETH.sol:14"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.17"
      },
      "contracts/token/YumiCoin.sol:YumiCoin": {
        "src": "contracts/token/YumiCoin.sol:5",
        "version": {
          "withMetadata": "8431aee4ef8b904c616e7e7d3d5a04cf0cd6d8df53045576d66ba56384d03456",
          "withoutMetadata": "f36171d1f9a2925fee41fa9c5fdac1817b02b3724295ce920b516b09da4dc5ed",
          "linkedWithoutMetadata": "f36171d1f9a2925fee41fa9c5fdac1817b02b3724295ce920b516b09da4dc5ed"
        },
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "YumiCoin",
            "src": "contracts/token/YumiCoin.sol:6"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.17"
      },
      "erc721a/contracts/ERC721A.sol:ERC721A": {
        "src": "erc721a/contracts/ERC721A.sol:36",
        "version": {
          "withMetadata": "7c893bc645d52546e9e8fcccbf0f40ed146c3e9619c1dceda5f778283866baf5",
          "withoutMetadata": "7e8546881f158ea906b953c109287b9195d254ad95eb3c0dad6864d2b2c98aed",
          "linkedWithoutMetadata": "7e8546881f158ea906b953c109287b9195d254ad95eb3c0dad6864d2b2c98aed"
        },
        "inherit": [
          "erc721a/contracts/IERC721A.sol:IERC721A"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "totalSupply()",
          "balanceOf(address)",
          "supportsInterface(bytes4)",
          "name()",
          "symbol()",
          "tokenURI(uint256)",
          "ownerOf(uint256)",
          "approve(address,uint256)",
          "getApproved(uint256)",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "transferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC721A",
            "src": "erc721a/contracts/ERC721A.sol:140"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_currentIndex",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ERC721A",
              "src": "erc721a/contracts/ERC721A.sol:98"
            },
            {
              "label": "_burnCounter",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "ERC721A",
              "src": "erc721a/contracts/ERC721A.sol:101"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "2",
              "type": "t_string_storage",
              "contract": "ERC721A",
              "src": "erc721a/contracts/ERC721A.sol:104"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC721A",
              "src": "erc721a/contracts/ERC721A.sol:107"
            },
            {
              "label": "_packedOwnerships",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "ERC721A",
              "src": "erc721a/contracts/ERC721A.sol:119"
            },
            {
              "label": "_packedAddressData",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC721A",
              "src": "erc721a/contracts/ERC721A.sol:128"
            },
            {
              "label": "_tokenApprovals",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_uint256,t_struct(TokenApprovalRef)2493_storage)",
              "contract": "ERC721A",
              "src": "erc721a/contracts/ERC721A.sol:131"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC721A",
              "src": "erc721a/contracts/ERC721A.sol:134"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(TokenApprovalRef)2493_storage)": {
              "label": "mapping(uint256 => struct ERC721A.TokenApprovalRef)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(TokenApprovalRef)2493_storage": {
              "label": "struct ERC721A.TokenApprovalRef",
              "members": [
                {
                  "label": "value",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.17"
      },
      "erc721a/contracts/ERC721A.sol:ERC721A__IERC721Receiver": {
        "src": "erc721a/contracts/ERC721A.sol:12",
        "inherit": [],
        "libraries": [],
        "methods": [
          "onERC721Received(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.17"
      },
      "erc721a/contracts/IERC721A.sol:IERC721A": {
        "src": "erc721a/contracts/IERC721A.sol:10",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "supportsInterface(bytes4)",
          "balanceOf(address)",
          "ownerOf(uint256)",
          "safeTransferFrom(address,address,uint256,bytes)",
          "safeTransferFrom(address,address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "setApprovalForAll(address,bool)",
          "getApproved(uint256)",
          "isApprovedForAll(address,address)",
          "name()",
          "symbol()",
          "tokenURI(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.17"
      }
    }
  ]
}