/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BytesLike,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  ERC721ACore,
  ERC721ACoreInterface,
} from "../../../contracts/nft/ERC721ACore";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "string",
        name: "symbol",
        type: "string",
      },
      {
        internalType: "address",
        name: "royaltyRecipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "royaltyPercentage",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "supply",
        type: "uint256",
      },
      {
        internalType: "bytes32",
        name: "merkleRoot",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "admin",
        type: "address",
      },
      {
        internalType: "address",
        name: "payout",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "ApprovalCallerNotOwnerNorApproved",
    type: "error",
  },
  {
    inputs: [],
    name: "ApprovalQueryForNonexistentToken",
    type: "error",
  },
  {
    inputs: [],
    name: "BalanceQueryForZeroAddress",
    type: "error",
  },
  {
    inputs: [],
    name: "MintERC2309QuantityExceedsLimit",
    type: "error",
  },
  {
    inputs: [],
    name: "MintToZeroAddress",
    type: "error",
  },
  {
    inputs: [],
    name: "MintZeroQuantity",
    type: "error",
  },
  {
    inputs: [],
    name: "OwnerQueryForNonexistentToken",
    type: "error",
  },
  {
    inputs: [],
    name: "OwnershipNotInitializedForExtraData",
    type: "error",
  },
  {
    inputs: [],
    name: "TransferCallerNotOwnerNorApproved",
    type: "error",
  },
  {
    inputs: [],
    name: "TransferFromIncorrectOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "TransferToNonERC721ReceiverImplementer",
    type: "error",
  },
  {
    inputs: [],
    name: "TransferToZeroAddress",
    type: "error",
  },
  {
    inputs: [],
    name: "URIQueryForNonexistentToken",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "fromTokenId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "toTokenId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "ConsecutiveTransfer",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [],
    name: "adminAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "addresses",
        type: "address[]",
      },
    ],
    name: "airdrop",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "allowlistMerkleRoot",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "allowlistSaleOpen",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "freezeMetadata",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "frozen",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "addr",
        type: "address",
      },
    ],
    name: "getNumMinted",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getRemainingSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "maxSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "numToMint",
        type: "uint256",
      },
      {
        internalType: "bytes32[]",
        name: "merkleProof",
        type: "bytes32[]",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "mintAllowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "mintPrice",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint128",
        name: "numToMint",
        type: "uint128",
      },
    ],
    name: "ownerMint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "payoutAddress",
    outputs: [
      {
        internalType: "address payable",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "publicSaleOpen",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_salePrice",
        type: "uint256",
      },
    ],
    name: "royaltyInfo",
    outputs: [
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "royaltyAmount",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newAdmin",
        type: "address",
      },
    ],
    name: "setAdminAddress",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "status",
        type: "bool",
      },
    ],
    name: "setAllowlistSaleStatus",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "newURI",
        type: "string",
      },
    ],
    name: "setBaseURI",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "allowance",
        type: "uint256",
      },
    ],
    name: "setMintAllowance",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "payoutAddr",
        type: "address",
      },
    ],
    name: "setPayoutAddress",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "status",
        type: "bool",
      },
    ],
    name: "setPublicSaleStatus",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newAddr",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "newPerc",
        type: "uint256",
      },
    ],
    name: "setRoyaltyInfo",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "withdrawEther",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162002a6d38038062002a6d83398101604081905262000034916200020d565b86868a8a600262000046838262000365565b50600362000055828262000365565b5060016000555050600880546001600160a01b0319166001600160a01b039390931692909217909155600955620000936200008d3390565b620000d9565b600c94909455600d92909255601055600f80546001600160a01b039283166001600160a01b031991821617909155600e8054929093169116179055506200043192505050565b600a80546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126200015357600080fd5b81516001600160401b03808211156200017057620001706200012b565b604051601f8301601f19908116603f011681019082821181831017156200019b576200019b6200012b565b81604052838152602092508683858801011115620001b857600080fd5b600091505b83821015620001dc5785820183015181830184015290820190620001bd565b600093810190920192909252949350505050565b80516001600160a01b03811681146200020857600080fd5b919050565b60008060008060008060008060006101208a8c0312156200022d57600080fd5b89516001600160401b03808211156200024557600080fd5b620002538d838e0162000141565b9a5060208c01519150808211156200026a57600080fd5b50620002798c828d0162000141565b9850506200028a60408b01620001f0565b965060608a0151955060808a0151945060a08a0151935060c08a01519250620002b660e08b01620001f0565b9150620002c76101008b01620001f0565b90509295985092959850929598565b600181811c90821680620002eb57607f821691505b6020821081036200030c57634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156200036057600081815260208120601f850160051c810160208610156200033b5750805b601f850160051c820191505b818110156200035c5782815560010162000347565b5050505b505050565b81516001600160401b038111156200038157620003816200012b565b6200039981620003928454620002d6565b8462000312565b602080601f831160018114620003d15760008415620003b85750858301515b600019600386901b1c1916600185901b1785556200035c565b600085815260208120601f198616915b828110156200040257888601518255948401946001909101908401620003e1565b5085821015620004215787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b61262c80620004416000396000f3fe6080604052600436106102c65760003560e01c8063729ad39e11610179578063b88d4fde116100d6578063e2e784d51161008a578063f2fde38b11610064578063f2fde38b1461076b578063f9e237991461078b578063fc6f9468146107ac57600080fd5b8063e2e784d5146106ed578063e4b7fb731461070d578063e985e9c51461072257600080fd5b8063c87b56dd116100bb578063c87b56dd146106a2578063d111515d146106c2578063d5abeb01146106d757600080fd5b8063b88d4fde1461067c578063ba41b0c61461068f57600080fd5b8063a809f7a51161012d578063ae129b1711610112578063ae129b171461061c578063ae23d6131461063c578063b423fe671461065c57600080fd5b8063a809f7a5146105db578063acf080d1146105fc57600080fd5b80638da5cb5b1161015e5780638da5cb5b1461058857806395d89b41146105a6578063a22cb465146105bb57600080fd5b8063729ad39e146105535780637362377b1461057357600080fd5b806333ea51a8116102275780635b8d02d7116101db5780636817c76c116101c05780636817c76c1461050857806370a082311461051e578063715018a61461053e57600080fd5b80635b8d02d7146104c85780636352211e146104e857600080fd5b80633d6dc6cf1161020c5780633d6dc6cf1461047557806342842e0e1461049557806355f804b3146104a857600080fd5b806333ea51a81461043f578063396876bd1461045f57600080fd5b806318160ddd1161027e578063293108e011610263578063293108e0146103ca5780632a55205a146103e05780632c1e816d1461041f57600080fd5b806318160ddd1461039057806323b872dd146103b757600080fd5b806306fdde03116102af57806306fdde0314610321578063081812fc14610343578063095ea7b31461037b57600080fd5b806301ffc9a7146102cb578063054f7d9c14610300575b600080fd5b3480156102d757600080fd5b506102eb6102e6366004611f5d565b6107cc565b60405190151581526020015b60405180910390f35b34801561030c57600080fd5b50600a546102eb90600160b01b900460ff1681565b34801561032d57600080fd5b506103366107ec565b6040516102f79190611fca565b34801561034f57600080fd5b5061036361035e366004611fdd565b61087e565b6040516001600160a01b0390911681526020016102f7565b61038e610389366004612012565b6108c2565b005b34801561039c57600080fd5b5060015460005403600019015b6040519081526020016102f7565b61038e6103c536600461203c565b61097f565b3480156103d657600080fd5b506103a960105481565b3480156103ec57600080fd5b506104006103fb366004612078565b610b35565b604080516001600160a01b0390931683526020830191909152016102f7565b34801561042b57600080fd5b5061038e61043a36600461209a565b610b71565b34801561044b57600080fd5b5061038e61045a36600461209a565b610c1c565b34801561046b57600080fd5b506103a9600b5481565b34801561048157600080fd5b506103a961049036600461209a565b610cc2565b61038e6104a336600461203c565b610ced565b3480156104b457600080fd5b5061038e6104c3366004612141565b610d0d565b3480156104d457600080fd5b50600e54610363906001600160a01b031681565b3480156104f457600080fd5b50610363610503366004611fdd565b610df0565b34801561051457600080fd5b506103a9600c5481565b34801561052a57600080fd5b506103a961053936600461209a565b610dfb565b34801561054a57600080fd5b5061038e610e4a565b34801561055f57600080fd5b5061038e61056e3660046121cf565b610e5e565b34801561057f57600080fd5b5061038e610f98565b34801561059457600080fd5b50600a546001600160a01b0316610363565b3480156105b257600080fd5b50610336611043565b3480156105c757600080fd5b5061038e6105d6366004612221565b611052565b3480156105e757600080fd5b50600a546102eb90600160a01b900460ff1681565b34801561060857600080fd5b5061038e610617366004611fdd565b6110be565b34801561062857600080fd5b5061038e610637366004612254565b611132565b34801561064857600080fd5b5061038e61065736600461226f565b6111da565b34801561066857600080fd5b5061038e610677366004612254565b611305565b61038e61068a3660046122a1565b6113ad565b61038e61069d36600461231d565b6113f7565b3480156106ae57600080fd5b506103366106bd366004611fdd565b61174d565b3480156106ce57600080fd5b5061038e6117d1565b3480156106e357600080fd5b506103a9600d5481565b3480156106f957600080fd5b5061038e610708366004612012565b611870565b34801561071957600080fd5b506103a96119fa565b34801561072e57600080fd5b506102eb61073d366004612369565b6001600160a01b03918216600090815260076020908152604080832093909416825291909152205460ff1690565b34801561077757600080fd5b5061038e61078636600461209a565b611a1b565b34801561079757600080fd5b50600a546102eb90600160a81b900460ff1681565b3480156107b857600080fd5b50600f54610363906001600160a01b031681565b60006107d782611aa8565b806107e657506107e682611af6565b92915050565b6060600280546107fb90612393565b80601f016020809104026020016040519081016040528092919081815260200182805461082790612393565b80156108745780601f1061084957610100808354040283529160200191610874565b820191906000526020600020905b81548152906001019060200180831161085757829003601f168201915b5050505050905090565b600061088982611b2b565b6108a6576040516333d1c03960e21b815260040160405180910390fd5b506000908152600660205260409020546001600160a01b031690565b60006108cd82610df0565b9050336001600160a01b03821614610923576001600160a01b038116600090815260076020908152604080832033845290915290205460ff16610923576040516367d9dca160e11b815260040160405180910390fd5b60008281526006602052604080822080546001600160a01b0319166001600160a01b0387811691821790925591518593918516917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591a4505050565b600061098a82611b60565b9050836001600160a01b0316816001600160a01b0316146109bd5760405162a1148160e81b815260040160405180910390fd5b60008281526006602052604090208054338082146001600160a01b03881690911417610a27576001600160a01b038616600090815260076020908152604080832033845290915290205460ff16610a2757604051632ce44b5f60e11b815260040160405180910390fd5b6001600160a01b038516610a4e57604051633a954ecd60e21b815260040160405180910390fd5b8015610a5957600082555b6001600160a01b038681166000908152600560205260408082208054600019019055918716808252919020805460010190554260a01b17600160e11b17600085815260046020526040812091909155600160e11b84169003610aeb57600184016000818152600460205260408120549003610ae9576000548114610ae95760008181526004602052604090208490555b505b83856001600160a01b0316876001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a45b505050505050565b60085460095460009182916001600160a01b039091169061271090610b5b9086906123e3565b610b6591906123fa565b915091505b9250929050565b610b79611bcf565b6001600160a01b038116610bfa5760405162461bcd60e51b815260206004820152603360248201527f45524337323141544c436f72653a204e65772061646d696e2063616e6e6f742060448201527f626520746865207a65726f20616464726573730000000000000000000000000060648201526084015b60405180910390fd5b600f80546001600160a01b0319166001600160a01b0392909216919091179055565b610c24611bcf565b6001600160a01b038116610ca05760405162461bcd60e51b815260206004820152603860248201527f45524337323141544c436f72653a205061796f7574206164647265737320636160448201527f6e6e6f7420626520746865207a65726f206164647265737300000000000000006064820152608401610bf1565b600e80546001600160a01b0319166001600160a01b0392909216919091179055565b6001600160a01b0381166000908152600560205260408082205467ffffffffffffffff911c166107e6565b610d08838383604051806020016040528060008152506113ad565b505050565b600f546001600160a01b0316331480610d305750600a546001600160a01b031633145b610d7c5760405162461bcd60e51b815260206004820152602960248201526000805160206126008339815191526044820152681037b91037bbb732b960b91b6064820152608401610bf1565b600a54600160b01b900460ff1615610de05760405162461bcd60e51b815260206004820152602160248201527f45524337323141544c436f72653a204d657461646174612069732066726f7a656044820152603760f91b6064820152608401610bf1565b6011610dec8282612462565b5050565b60006107e682611b60565b60006001600160a01b038216610e24576040516323d3ad8160e21b815260040160405180910390fd5b506001600160a01b031660009081526005602052604090205467ffffffffffffffff1690565b610e52611bcf565b610e5c6000611c29565b565b600f546001600160a01b0316331480610e815750600a546001600160a01b031633145b610ecd5760405162461bcd60e51b815260206004820152602960248201526000805160206126008339815191526044820152681037b91037bbb732b960b91b6064820152608401610bf1565b600d54600182610edc60005490565b610ee69190612522565b610ef09190612535565b1115610f4a5760405162461bcd60e51b815260206004820152602360248201527f45524337323141544c436f72653a204e6f20746f6b656e20737570706c79206c60448201526219599d60ea1b6064820152608401610bf1565b60005b81811015610d0857610f86838383818110610f6a57610f6a612548565b9050602002016020810190610f7f919061209a565b6001611c7b565b80610f908161255e565b915050610f4d565b600f546001600160a01b0316331480610fbb5750600a546001600160a01b031633145b6110075760405162461bcd60e51b815260206004820152602960248201526000805160206126008339815191526044820152681037b91037bbb732b960b91b6064820152608401610bf1565b600e546040516001600160a01b03909116904780156108fc02916000818181858888f19350505050158015611040573d6000803e3d6000fd5b50565b6060600380546107fb90612393565b3360008181526007602090815260408083206001600160a01b03871680855290835292819020805460ff191686151590811790915590519081529192917f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a35050565b600f546001600160a01b03163314806110e15750600a546001600160a01b031633145b61112d5760405162461bcd60e51b815260206004820152602960248201526000805160206126008339815191526044820152681037b91037bbb732b960b91b6064820152608401610bf1565b600b55565b600f546001600160a01b03163314806111555750600a546001600160a01b031633145b6111a15760405162461bcd60e51b815260206004820152602960248201526000805160206126008339815191526044820152681037b91037bbb732b960b91b6064820152608401610bf1565b600a8054911515600160a01b027fffffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffff909216919091179055565b600f546001600160a01b03163314806111fd5750600a546001600160a01b031633145b6112495760405162461bcd60e51b815260206004820152602960248201526000805160206126008339815191526044820152681037b91037bbb732b960b91b6064820152608401610bf1565b600d546001826fffffffffffffffffffffffffffffffff1661126a60005490565b6112749190612522565b61127e9190612535565b11156112d85760405162461bcd60e51b815260206004820152602360248201527f45524337323141544c436f72653a204e6f20746f6b656e20737570706c79206c60448201526219599d60ea1b6064820152608401610bf1565b6110406112ed600a546001600160a01b031690565b826fffffffffffffffffffffffffffffffff16611c7b565b600f546001600160a01b03163314806113285750600a546001600160a01b031633145b6113745760405162461bcd60e51b815260206004820152602960248201526000805160206126008339815191526044820152681037b91037bbb732b960b91b6064820152608401610bf1565b600a8054911515600160a81b027fffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffffff909216919091179055565b6113b884848461097f565b6001600160a01b0383163b156113f1576113d484848484611d79565b6113f1576040516368d2bf6b60e11b815260040160405180910390fd5b50505050565b33321461146c5760405162461bcd60e51b815260206004820152603060248201527f45524337323141544c436f72653a2046756e6374696f6e206d7573742062652060448201527f63616c6c656420627920616e20454f41000000000000000000000000000000006064820152608401610bf1565b600d5460018461147b60005490565b6114859190612522565b61148f9190612535565b11156114e95760405162461bcd60e51b815260206004820152602360248201527f45524337323141544c436f72653a204e6f20746f6b656e20737570706c79206c60448201526219599d60ea1b6064820152608401610bf1565b82600c546114f791906123e3565b34101561156c5760405162461bcd60e51b815260206004820152603b60248201527f45524337323141544c436f72653a204e6f7420656e6f7567682065746865722060448201527f617474616368656420746f20746865207472616e73616374696f6e00000000006064820152608401610bf1565b600b5433600090815260056020526040908190205485911c67ffffffffffffffff166115989190612522565b111561160c5760405162461bcd60e51b815260206004820152602560248201527f45524337323141544c436f72653a204d696e7420616c6c6f77616e636520726560448201527f61636865640000000000000000000000000000000000000000000000000000006064820152608401610bf1565b600a54600160a01b900460ff16156116ea576040516bffffffffffffffffffffffff193360601b166020820152600090603401604051602081830303815290604052805190602001209050611698838380806020026020016040519081016040528093929190818152602001838360200280828437600092019190915250506010549150849050611e65565b6116e45760405162461bcd60e51b815260206004820152601f60248201527f45524337323141544c436f72653a204e6f74206f6e20616c6c6f776c697374006044820152606401610bf1565b50611743565b600a54600160a81b900460ff166117435760405162461bcd60e51b815260206004820152601c60248201527f45524337323141544c436f72653a204d696e74206e6f74206f70656e000000006044820152606401610bf1565b610d083384611c7b565b606061175882611b2b565b61177557604051630a14c4b560e41b815260040160405180910390fd5b600061177f611e7b565b9050805160000361179f57604051806020016040528060008152506117ca565b806117a984611e8a565b6040516020016117ba929190612577565b6040516020818303038152906040525b9392505050565b600f546001600160a01b03163314806117f45750600a546001600160a01b031633145b6118405760405162461bcd60e51b815260206004820152602960248201526000805160206126008339815191526044820152681037b91037bbb732b960b91b6064820152608401610bf1565b600a80547fffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffffffff16600160b01b179055565b600f546001600160a01b03163314806118935750600a546001600160a01b031633145b6118df5760405162461bcd60e51b815260206004820152602960248201526000805160206126008339815191526044820152681037b91037bbb732b960b91b6064820152608401610bf1565b6001600160a01b03821661195d576040805162461bcd60e51b81526020600482015260248101919091527f45524337323141544c436f72653a2043616e6e6f742073657420726f79616c7460448201527f792072656365697069656e7420746f20746865207a65726f20616464726573736064820152608401610bf1565b61271081106119d45760405162461bcd60e51b815260206004820152603860248201527f45524337323141544c436f72653a2043616e6e6f742073657420726f79616c7460448201527f792070657263656e746167652061626f766520313030303000000000000000006064820152608401610bf1565b600880546001600160a01b0319166001600160a01b039390931692909217909155600955565b60008054600d54611a0c906001612522565b611a169190612535565b905090565b611a23611bcf565b6001600160a01b038116611a9f5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f64647265737300000000000000000000000000000000000000000000000000006064820152608401610bf1565b61104081611c29565b60006301ffc9a760e01b6001600160e01b031983161480611ad957506380ac58cd60e01b6001600160e01b03198316145b806107e65750506001600160e01b031916635b5e139f60e01b1490565b60006001600160e01b0319821663152a902d60e11b14806107e657506301ffc9a760e01b6001600160e01b03198316146107e6565b600081600111158015611b3f575060005482105b80156107e6575050600090815260046020526040902054600160e01b161590565b60008180600111611bb657600054811015611bb65760008181526004602052604081205490600160e01b82169003611bb4575b806000036117ca575060001901600081815260046020526040902054611b93565b505b604051636f96cda160e11b815260040160405180910390fd5b600a546001600160a01b03163314610e5c5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610bf1565b600a80546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6000805490829003611ca05760405163b562e8dd60e01b815260040160405180910390fd5b6001600160a01b03831660008181526005602090815260408083208054680100000000000000018802019055848352600490915281206001851460e11b4260a01b178317905582840190839083907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8180a4600183015b818114611d4f57808360007fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef600080a4600101611d17565b5081600003611d7057604051622e076360e81b815260040160405180910390fd5b60005550505050565b604051630a85bd0160e11b81526000906001600160a01b0385169063150b7a0290611dae9033908990889088906004016125a6565b6020604051808303816000875af1925050508015611de9575060408051601f3d908101601f19168201909252611de6918101906125e2565b60015b611e47573d808015611e17576040519150601f19603f3d011682016040523d82523d6000602084013e611e1c565b606091505b508051600003611e3f576040516368d2bf6b60e11b815260040160405180910390fd5b805181602001fd5b6001600160e01b031916630a85bd0160e11b1490505b949350505050565b600082611e728584611ece565b14949350505050565b6060601180546107fb90612393565b606060a06040510180604052602081039150506000815280825b600183039250600a81066030018353600a900480611ea45750819003601f19909101908152919050565b600081815b8451811015611f1357611eff82868381518110611ef257611ef2612548565b6020026020010151611f1b565b915080611f0b8161255e565b915050611ed3565b509392505050565b6000818310611f375760008281526020849052604090206117ca565b5060009182526020526040902090565b6001600160e01b03198116811461104057600080fd5b600060208284031215611f6f57600080fd5b81356117ca81611f47565b60005b83811015611f95578181015183820152602001611f7d565b50506000910152565b60008151808452611fb6816020860160208601611f7a565b601f01601f19169290920160200192915050565b6020815260006117ca6020830184611f9e565b600060208284031215611fef57600080fd5b5035919050565b80356001600160a01b038116811461200d57600080fd5b919050565b6000806040838503121561202557600080fd5b61202e83611ff6565b946020939093013593505050565b60008060006060848603121561205157600080fd5b61205a84611ff6565b925061206860208501611ff6565b9150604084013590509250925092565b6000806040838503121561208b57600080fd5b50508035926020909101359150565b6000602082840312156120ac57600080fd5b6117ca82611ff6565b634e487b7160e01b600052604160045260246000fd5b600067ffffffffffffffff808411156120e6576120e66120b5565b604051601f8501601f19908116603f0116810190828211818310171561210e5761210e6120b5565b8160405280935085815286868601111561212757600080fd5b858560208301376000602087830101525050509392505050565b60006020828403121561215357600080fd5b813567ffffffffffffffff81111561216a57600080fd5b8201601f8101841361217b57600080fd5b611e5d848235602084016120cb565b60008083601f84011261219c57600080fd5b50813567ffffffffffffffff8111156121b457600080fd5b6020830191508360208260051b8501011115610b6a57600080fd5b600080602083850312156121e257600080fd5b823567ffffffffffffffff8111156121f957600080fd5b6122058582860161218a565b90969095509350505050565b8035801515811461200d57600080fd5b6000806040838503121561223457600080fd5b61223d83611ff6565b915061224b60208401612211565b90509250929050565b60006020828403121561226657600080fd5b6117ca82612211565b60006020828403121561228157600080fd5b81356fffffffffffffffffffffffffffffffff811681146117ca57600080fd5b600080600080608085870312156122b757600080fd5b6122c085611ff6565b93506122ce60208601611ff6565b925060408501359150606085013567ffffffffffffffff8111156122f157600080fd5b8501601f8101871361230257600080fd5b612311878235602084016120cb565b91505092959194509250565b60008060006040848603121561233257600080fd5b83359250602084013567ffffffffffffffff81111561235057600080fd5b61235c8682870161218a565b9497909650939450505050565b6000806040838503121561237c57600080fd5b61238583611ff6565b915061224b60208401611ff6565b600181811c908216806123a757607f821691505b6020821081036123c757634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b80820281158282048414176107e6576107e66123cd565b60008261241757634e487b7160e01b600052601260045260246000fd5b500490565b601f821115610d0857600081815260208120601f850160051c810160208610156124435750805b601f850160051c820191505b81811015610b2d5782815560010161244f565b815167ffffffffffffffff81111561247c5761247c6120b5565b6124908161248a8454612393565b8461241c565b602080601f8311600181146124c557600084156124ad5750858301515b600019600386901b1c1916600185901b178555610b2d565b600085815260208120601f198616915b828110156124f4578886015182559484019460019091019084016124d5565b50858210156125125787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b808201808211156107e6576107e66123cd565b818103818111156107e6576107e66123cd565b634e487b7160e01b600052603260045260246000fd5b600060018201612570576125706123cd565b5060010190565b60008351612589818460208801611f7a565b83519083019061259d818360208801611f7a565b01949350505050565b60006001600160a01b038087168352808616602084015250836040830152608060608301526125d86080830184611f9e565b9695505050505050565b6000602082840312156125f457600080fd5b81516117ca81611f4756fe45524337323141544c436f72653a2041646472657373206e6f742061646d696ea164736f6c6343000811000a";

type ERC721ACoreConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ERC721ACoreConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ERC721ACore__factory extends ContractFactory {
  constructor(...args: ERC721ACoreConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    name: PromiseOrValue<string>,
    symbol: PromiseOrValue<string>,
    royaltyRecipient: PromiseOrValue<string>,
    royaltyPercentage: PromiseOrValue<BigNumberish>,
    price: PromiseOrValue<BigNumberish>,
    supply: PromiseOrValue<BigNumberish>,
    merkleRoot: PromiseOrValue<BytesLike>,
    admin: PromiseOrValue<string>,
    payout: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ERC721ACore> {
    return super.deploy(
      name,
      symbol,
      royaltyRecipient,
      royaltyPercentage,
      price,
      supply,
      merkleRoot,
      admin,
      payout,
      overrides || {}
    ) as Promise<ERC721ACore>;
  }
  override getDeployTransaction(
    name: PromiseOrValue<string>,
    symbol: PromiseOrValue<string>,
    royaltyRecipient: PromiseOrValue<string>,
    royaltyPercentage: PromiseOrValue<BigNumberish>,
    price: PromiseOrValue<BigNumberish>,
    supply: PromiseOrValue<BigNumberish>,
    merkleRoot: PromiseOrValue<BytesLike>,
    admin: PromiseOrValue<string>,
    payout: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      name,
      symbol,
      royaltyRecipient,
      royaltyPercentage,
      price,
      supply,
      merkleRoot,
      admin,
      payout,
      overrides || {}
    );
  }
  override attach(address: string): ERC721ACore {
    return super.attach(address) as ERC721ACore;
  }
  override connect(signer: Signer): ERC721ACore__factory {
    return super.connect(signer) as ERC721ACore__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ERC721ACoreInterface {
    return new utils.Interface(_abi) as ERC721ACoreInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ERC721ACore {
    return new Contract(address, _abi, signerOrProvider) as ERC721ACore;
  }
}
